{"includedArchiveIdentifiers":["OpenAIClient"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/streamingclient\/state","title":"var state: ReadyState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/streamingclient\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/openaiclient\/streamingclient\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/openaiclient\/streamingclient","title":"StreamingClient","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/hasvalidcredentials","title":"var hasValidCredentials: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/cancelfinetune(id:)","title":"func cancelFineTune(id: String) async throws -> FineTune","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/chatcompletion(id:conversation:)","title":"func chatCompletion(id: String, conversation: [ChatCompletionRequestMessage]) async throws -> CreateChatCompletionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/completions(request:)","title":"func completions(request: CreateCompletionRequest) async throws -> CreateCompletionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/configure(apikey:organizationid:)","title":"func configure(apiKey: String, organizationId: String) -> Self","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/createembedding(request:)","title":"func createEmbedding(request: CreateEmbeddingRequest) async throws -> CreateEmbeddingResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/createfinetune(finetunerequest:)","title":"func createFineTune(fineTuneRequest: CreateFineTuneRequest) async throws -> FineTune","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/createtranscription(file:language:model:prompt:temperature:responseformat:)","title":"func createTranscription(file: TranscriptionFile, language: ISO6391?, model: String, prompt: String?, temperature: Double?, responseFormat: TranscriptionFormat) async throws -> CreateTranscriptionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/createtranslation(file:model:prompt:temperature:responseformat:)","title":"func createTranslation(file: TranscriptionFile, model: String, prompt: String?, temperature: Double?, responseFormat: TranscriptionFormat) async throws -> CreateTranscriptionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/deletefile(id:)","title":"func deleteFile(id: String) async throws -> DeleteFileResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/deletefinetunemodel(id:)","title":"func deleteFineTuneModel(id: String) async throws -> DeleteModelResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/edit(request:)","title":"func edit(request: CreateEditRequest) async throws -> CreateEditResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/engine(id:)","title":"func engine(id: String) async throws -> Engine","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/engines()","title":"func engines() async throws -> ListEnginesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/files()","title":"func files() async throws -> ListFilesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/image(request:)","title":"func image(request: CreateImageRequest) async throws -> ImagesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/imageedit(prompt:image:mask:)","title":"func imageEdit(prompt: String, image: CPImage, mask: CPImage?) async throws -> ImagesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/imagevariations(image:numberofimages:size:responseformat:userid:)","title":"func imageVariations(image: CPImage, numberOfImages: Int, size: VariationsSize, responseFormat: VariationsFormat, userId: String?) async throws -> ImagesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/listfinetuneevents(id:)","title":"func listFineTuneEvents(id: String) async throws -> ListFineTuneEventsResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/listfinetunes()","title":"func listFineTunes() async throws -> ListFineTunesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/model(id:)","title":"func model(id: String) async throws -> Model","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/models()","title":"func models() async throws -> ListModelsResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/moderation(input:modelid:)","title":"func moderation(input: String, modelId: String) async throws -> CreateModerationResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/retrievefilecontent(id:)","title":"func retrieveFileContent(id: String) async throws -> String","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/retrievefileinformation(id:)","title":"func retrieveFileInformation(id: String) async throws -> RetrieveFileResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/retrievefinetune(id:)","title":"func retrieveFineTune(id: String) async throws -> FineTune","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/streamingchatcompletion(modelid:conversation:)","title":"func streamingChatCompletion(modelId: String, conversation: [ChatCompletionRequestMessage]) throws -> AsyncStream<[ChatChunk]>","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/streamingchatcompletion(streamlistener:modelid:conversation:)","title":"func streamingChatCompletion(streamListener: ([ChatChunk]) throws -> Void, modelId: String, conversation: [ChatCompletionRequestMessage]) throws -> StreamingClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/streamingcompletion(request:)","title":"func streamingCompletion(request: CreateCompletionRequest) throws -> AsyncStream<[CompletionChunk]>","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/streamingcompletion(request:streamlistener:)","title":"func streamingCompletion(request: CreateCompletionRequest, streamListener: ([CompletionChunk]) throws -> Void) throws -> StreamingClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/streaminglistfinetuneevents(id:)","title":"func streamingListFineTuneEvents(id: String) throws -> AsyncStream<[FineTuneEvent]>","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/streaminglistfinetuneevents(id:streamlistener:)","title":"func streamingListFineTuneEvents(id: String, streamListener: ([FineTuneEvent]) throws -> Void) async throws -> StreamingClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/tryauthenticatedcall()","title":"func tryAuthenticatedCall() async throws","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclientprotocol\/uploadfile(filecontent:filename:purpose:)","title":"func uploadFile(fileContent: String, filename: String, purpose: String) async throws -> OpenAIFile","type":"method"}],"path":"\/documentation\/openaiclient\/openaiclientprotocol","title":"OpenAIClientProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/delta-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/delta-swift.struct\/content","title":"let content: String?","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/delta-swift.struct\/role","title":"let role: String?","type":"property"}],"path":"\/documentation\/openaiclient\/chatchunk\/choice\/delta-swift.struct","title":"ChatChunk.Choice.Delta","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/delta-swift.property","title":"let delta: ChatChunk.Choice.Delta","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/finishreason","title":"let finishReason: String?","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/index","title":"let index: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/delta","title":"case delta","type":"case"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/finishreason","title":"case finishReason","type":"case"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/index","title":"case index","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/chatchunk\/choice\/codingkeys","title":"ChatChunk.Choice.CodingKeys","type":"enum"}],"path":"\/documentation\/openaiclient\/chatchunk\/choice","title":"ChatChunk.Choice","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/chatchunk\/choices","title":"let choices: [ChatChunk.Choice]","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/created","title":"let created: Int","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/firstchoice","title":"var firstChoice: String","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/model","title":"let model: String","type":"property"},{"path":"\/documentation\/openaiclient\/chatchunk\/object","title":"let object: String","type":"property"}],"path":"\/documentation\/openaiclient\/chatchunk","title":"ChatChunk","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/finishreason","title":"let finishReason: String?","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/logprobs","title":"let logprobs: Double?","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/text","title":"let text: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/finishreason","title":"case finishReason","type":"case"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/index","title":"case index","type":"case"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/logprobs","title":"case logprobs","type":"case"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/completionchunk\/choice\/codingkeys","title":"CompletionChunk.Choice.CodingKeys","type":"enum"}],"path":"\/documentation\/openaiclient\/completionchunk\/choice","title":"CompletionChunk.Choice","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/completionchunk\/choices","title":"let choices: [CompletionChunk.Choice]","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/created","title":"let created: Int","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/firstchoice","title":"var firstChoice: String","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/model","title":"let model: String","type":"property"},{"path":"\/documentation\/openaiclient\/completionchunk\/object","title":"let object: String","type":"property"}],"path":"\/documentation\/openaiclient\/completionchunk","title":"CompletionChunk","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/json\/decode(_:)","title":"static func decode<T>(String) throws -> T","type":"method"},{"path":"\/documentation\/openaiclient\/json\/deserialize(_:)","title":"static func deserialize(String) throws -> Any","type":"method"},{"path":"\/documentation\/openaiclient\/json\/encode(_:)","title":"static func encode(any Encodable) throws -> String","type":"method"},{"path":"\/documentation\/openaiclient\/json\/serialize(_:)","title":"static func serialize(Any) throws -> String","type":"method"}],"path":"\/documentation\/openaiclient\/json","title":"JSON","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaiclient\/init(log:)","title":"init(log: Level)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaiclient\/hasvalidcredentials","title":"var hasValidCredentials: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaiclient\/cancelfinetune(id:)","title":"func cancelFineTune(id: String) async throws -> FineTune","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/chatcompletion(id:conversation:)","title":"func chatCompletion(id: String, conversation: [ChatCompletionRequestMessage]) async throws -> CreateChatCompletionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/completions(request:)","title":"func completions(request: CreateCompletionRequest) async throws -> CreateCompletionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/configure(apikey:organizationid:)","title":"func configure(apiKey: String, organizationId: String) -> OpenAIClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/createembedding(request:)","title":"func createEmbedding(request: CreateEmbeddingRequest) async throws -> CreateEmbeddingResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/createfinetune(finetunerequest:)","title":"func createFineTune(fineTuneRequest: CreateFineTuneRequest) async throws -> FineTune","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/createtranscription(file:language:model:prompt:temperature:responseformat:)","title":"func createTranscription(file: TranscriptionFile, language: ISO6391?, model: String, prompt: String?, temperature: Double?, responseFormat: TranscriptionFormat) async throws -> CreateTranscriptionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/createtranslation(file:model:prompt:temperature:responseformat:)","title":"func createTranslation(file: TranscriptionFile, model: String, prompt: String?, temperature: Double?, responseFormat: TranscriptionFormat) async throws -> CreateTranscriptionResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/deletefile(id:)","title":"func deleteFile(id: String) async throws -> DeleteFileResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/deletefinetunemodel(id:)","title":"func deleteFineTuneModel(id: String) async throws -> DeleteModelResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/edit(request:)","title":"func edit(request: CreateEditRequest) async throws -> CreateEditResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/engine(id:)","title":"func engine(id: String) async throws -> Engine","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/engines()","title":"func engines() async throws -> ListEnginesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/files()","title":"func files() async throws -> ListFilesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/image(request:)","title":"func image(request: CreateImageRequest) async throws -> ImagesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/imageedit(prompt:image:mask:)","title":"func imageEdit(prompt: String, image: CPImage, mask: CPImage?) async throws -> ImagesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/imagevariations(image:numberofimages:size:responseformat:userid:)","title":"func imageVariations(image: CPImage, numberOfImages: Int, size: VariationsSize, responseFormat: VariationsFormat, userId: String?) async throws -> ImagesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/listfinetuneevents(id:)","title":"func listFineTuneEvents(id: String) async throws -> ListFineTuneEventsResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/listfinetunes()","title":"func listFineTunes() async throws -> ListFineTunesResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/model(id:)","title":"func model(id: String) async throws -> Model","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/models()","title":"func models() async throws -> ListModelsResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/moderation(input:modelid:)","title":"func moderation(input: String, modelId: String) async throws -> CreateModerationResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/retrievefilecontent(id:)","title":"func retrieveFileContent(id: String) async throws -> String","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/retrievefileinformation(id:)","title":"func retrieveFileInformation(id: String) async throws -> RetrieveFileResponse","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/retrievefinetune(id:)","title":"func retrieveFineTune(id: String) async throws -> FineTune","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/streamingchatcompletion(modelid:conversation:)","title":"func streamingChatCompletion(modelId: String, conversation: [ChatCompletionRequestMessage]) throws -> AsyncStream<[ChatChunk]>","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/streamingchatcompletion(streamlistener:modelid:conversation:)","title":"func streamingChatCompletion(streamListener: ([ChatChunk]) throws -> Void, modelId: String, conversation: [ChatCompletionRequestMessage]) throws -> StreamingClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/streamingcompletion(request:)","title":"func streamingCompletion(request: CreateCompletionRequest) throws -> AsyncStream<[CompletionChunk]>","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/streamingcompletion(request:streamlistener:)","title":"func streamingCompletion(request: CreateCompletionRequest, streamListener: ([CompletionChunk]) throws -> Void) throws -> StreamingClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/streaminglistfinetuneevents(id:)","title":"func streamingListFineTuneEvents(id: String) throws -> AsyncStream<[FineTuneEvent]>","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/streaminglistfinetuneevents(id:streamlistener:)","title":"func streamingListFineTuneEvents(id: String, streamListener: ([FineTuneEvent]) throws -> Void) async throws -> StreamingClient","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/tryauthenticatedcall()","title":"func tryAuthenticatedCall() async throws","type":"method"},{"path":"\/documentation\/openaiclient\/openaiclient\/uploadfile(filecontent:filename:purpose:)","title":"func uploadFile(fileContent: String, filename: String, purpose: String) async throws -> OpenAIFile","type":"method"}],"path":"\/documentation\/openaiclient\/openaiclient","title":"OpenAIClient","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaierror\/payload\/init(code:message:param:type:)","title":"init(code: String?, message: String, param: String?, type: String)","type":"init"},{"path":"\/documentation\/openaiclient\/openaierror\/payload\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaierror\/payload\/code","title":"let code: String?","type":"property"},{"path":"\/documentation\/openaiclient\/openaierror\/payload\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/openaiclient\/openaierror\/payload\/param","title":"let param: String?","type":"property"},{"path":"\/documentation\/openaiclient\/openaierror\/payload\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/openaiclient\/openaierror\/payload","title":"OpenAIError.Payload","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaierror\/init(error:)","title":"init(error: OpenAIError.Payload)","type":"init"},{"path":"\/documentation\/openaiclient\/openaierror\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaierror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/openaiclient\/openaierror\/error","title":"let error: OpenAIError.Payload","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/openaierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/openaiclient\/openaierror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/openaierror","title":"OpenAIError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/init(id:object:bytes:createdat:filename:purpose:)","title":"init(id: String, object: String, bytes: Int, createdAt: Int, filename: String, purpose: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/bytes","title":"var bytes: Int","type":"property"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/createdat","title":"var createdAt: Int","type":"property"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/filename","title":"var filename: String","type":"property"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/object","title":"var object: String","type":"property"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/purpose","title":"var purpose: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/retrievefileresponse\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/openaiclient\/retrievefileresponse","title":"RetrieveFileResponse","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/streamlistener\/onmessage","title":"var onMessage: ([T]) throws -> Void","type":"property"},{"path":"\/documentation\/openaiclient\/streamlistener\/onstreamclosed","title":"var onStreamClosed: () -> Void","type":"property"}],"path":"\/documentation\/openaiclient\/streamlistener","title":"StreamListener","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/init(filename:data:format:)","title":"init(filename: String, data: Data, format: TranscriptionFile.Format)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/contenttype","title":"var contentType: String","type":"property"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/filename","title":"let filename: String","type":"property"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.property","title":"let format: TranscriptionFile.Format","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/m4a","title":"case m4a","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/mp3","title":"case mp3","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/mp4","title":"case mp4","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/mpeg","title":"case mpeg","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/mpga","title":"case mpga","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/wav","title":"case wav","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/webm","title":"case webm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/transcriptionfile\/format-swift.enum","title":"TranscriptionFile.Format","type":"enum"}],"path":"\/documentation\/openaiclient\/transcriptionfile","title":"TranscriptionFile","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/cpimage","title":"CPImage","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/apierror\/apiclientbadrequesteditendpoint","title":"case apiClientBadRequestEditEndpoint","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiclientbadrequestvariationsendpoint","title":"case apiClientBadRequestVariationsEndpoint","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiclientdecodingerror(_:)","title":"case apiClientDecodingError(DecodingError)","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiclientencodingerror(_:)","title":"case apiClientEncodingError(EncodingError)","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiclientencodingerrorexpectedutf8","title":"case apiClientEncodingErrorExpectedUTF8","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiclientinvalidurl","title":"case apiClientInvalidURL","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiserverhttperror(_:httpcode:)","title":"case apiServerHTTPError(String?, httpCode: Int)","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiservernonhttpresponse","title":"case apiServerNonHTTPResponse","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/apiserveropenaierror(_:httpcode:)","title":"case apiServerOpenAIError(OpenAIError, httpCode: Int)","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/mockunimplementederror","title":"case mockUnimplementedError","type":"case"},{"path":"\/documentation\/openaiclient\/apierror\/unexpectederror(_:)","title":"case unexpectedError(any Error)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/apierror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openaiclient\/apierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/openaiclient\/apierror","title":"APIError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/iso6391\/abkhazian","title":"case abkhazian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/afar","title":"case afar","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/afrikaans","title":"case afrikaans","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/akan","title":"case akan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/albanian","title":"case albanian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/amharic","title":"case amharic","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/arabic","title":"case arabic","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/aragonese","title":"case aragonese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/armenian","title":"case armenian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/assamese","title":"case assamese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/avaric","title":"case avaric","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/avestan","title":"case avestan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/aymara","title":"case aymara","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/azerbaijani","title":"case azerbaijani","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/bambara","title":"case bambara","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/bashkir","title":"case bashkir","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/basque","title":"case basque","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/belarusian","title":"case belarusian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/bengali","title":"case bengali","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/bislama","title":"case bislama","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/bosnian","title":"case bosnian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/breton","title":"case breton","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/bulgarian","title":"case bulgarian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/burmese","title":"case burmese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/catalan","title":"case catalan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/centralkhmer","title":"case centralKhmer","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/chamorro","title":"case chamorro","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/chechen","title":"case chechen","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/chichewa","title":"case chichewa","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/chinese","title":"case chinese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/churchslavonic","title":"case churchSlavonic","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/chuvash","title":"case chuvash","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/cornish","title":"case cornish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/corsican","title":"case corsican","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/cree","title":"case cree","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/croatian","title":"case croatian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/czech","title":"case czech","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/danish","title":"case danish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/divehi","title":"case divehi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/dutch","title":"case dutch","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/dzongkha","title":"case dzongkha","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/english","title":"case english","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/esperanto","title":"case esperanto","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/estonian","title":"case estonian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ewe","title":"case ewe","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/faroese","title":"case faroese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/fijian","title":"case fijian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/finnish","title":"case finnish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/french","title":"case french","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/fulah","title":"case fulah","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/gaelic","title":"case gaelic","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/galician","title":"case galician","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ganda","title":"case ganda","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/georgian","title":"case georgian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/german","title":"case german","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/greek","title":"case greek","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/greekancient","title":"case greekAncient","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/guarani","title":"case guarani","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/gujarati","title":"case gujarati","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/haitian","title":"case haitian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/hausa","title":"case hausa","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/hebrew","title":"case hebrew","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/herero","title":"case herero","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/hindi","title":"case hindi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/hiri","title":"case hiri","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/hungarian","title":"case hungarian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/icelandic","title":"case icelandic","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ido","title":"case ido","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/igbo","title":"case igbo","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/indonesian","title":"case indonesian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/interlingua","title":"case interlingua","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/interlingue","title":"case interlingue","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/inuktitut","title":"case inuktitut","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/inupiaq","title":"case inupiaq","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/irish","title":"case irish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/italian","title":"case italian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/japanese","title":"case japanese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/javanese","title":"case javanese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kalaallisut","title":"case kalaallisut","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kannada","title":"case kannada","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kanuri","title":"case kanuri","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kashmiri","title":"case kashmiri","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kazakh","title":"case kazakh","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kikuyu","title":"case kikuyu","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kinyarwanda","title":"case kinyarwanda","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kirghiz","title":"case kirghiz","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/komi","title":"case komi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kongo","title":"case kongo","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/korean","title":"case korean","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kuanyama","title":"case kuanyama","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/kurdish","title":"case kurdish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/lao","title":"case lao","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/latin","title":"case latin","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/latvian","title":"case latvian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/limburgan","title":"case limburgan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/lingala","title":"case lingala","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/lithuanian","title":"case lithuanian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/lubakatanga","title":"case lubaKatanga","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/luxembourgish","title":"case luxembourgish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/macedonian","title":"case macedonian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/malagasy","title":"case malagasy","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/malay","title":"case malay","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/malayalam","title":"case malayalam","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/maltese","title":"case maltese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/manx","title":"case manx","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/maori","title":"case maori","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/marathi","title":"case marathi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/marshallese","title":"case marshallese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/mongolian","title":"case mongolian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/nauru","title":"case nauru","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/navajo","title":"case navajo","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ndonga","title":"case ndonga","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/nepali","title":"case nepali","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/northndebele","title":"case northNdebele","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/northernsami","title":"case northernSami","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/norwegian","title":"case norwegian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/norwegianbokm_l","title":"case norwegianBokmål","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/norwegiannynorsk","title":"case norwegianNynorsk","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/occitan","title":"case occitan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ojibwa","title":"case ojibwa","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/oriya","title":"case oriya","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/oromo","title":"case oromo","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ossetian","title":"case ossetian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/pali","title":"case pali","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/pashto","title":"case pashto","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/persian","title":"case persian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/polish","title":"case polish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/portuguese","title":"case portuguese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/punjabi","title":"case punjabi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/quechua","title":"case quechua","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/romanian","title":"case romanian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/romansh","title":"case romansh","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/rundi","title":"case rundi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/russian","title":"case russian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/samoan","title":"case samoan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sango","title":"case sango","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sanskrit","title":"case sanskrit","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sardinian","title":"case sardinian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/serbian","title":"case serbian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/shona","title":"case shona","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sichuan","title":"case sichuan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sindhi","title":"case sindhi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sinhala","title":"case sinhala","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/slovak","title":"case slovak","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/slovenian","title":"case slovenian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/somali","title":"case somali","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/southndebele","title":"case southNdebele","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/southernsotho","title":"case southernSotho","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/spanish","title":"case spanish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/sundanese","title":"case sundanese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/swahili","title":"case swahili","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/swati","title":"case swati","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/swedish","title":"case swedish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tagalog","title":"case tagalog","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tahitian","title":"case tahitian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tajik","title":"case tajik","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tamil","title":"case tamil","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tatar","title":"case tatar","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/telugu","title":"case telugu","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/thai","title":"case thai","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tibetan","title":"case tibetan","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tigrinya","title":"case tigrinya","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tonga","title":"case tonga","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tsonga","title":"case tsonga","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/tswana","title":"case tswana","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/turkish","title":"case turkish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/turkmen","title":"case turkmen","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/twi","title":"case twi","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/uighur","title":"case uighur","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/ukrainian","title":"case ukrainian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/urdu","title":"case urdu","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/uzbek","title":"case uzbek","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/venda","title":"case venda","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/vietnamese","title":"case vietnamese","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/volap_k","title":"case volapük","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/walloon","title":"case walloon","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/welsh","title":"case welsh","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/westernfrisian","title":"case westernFrisian","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/wolof","title":"case wolof","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/xhosa","title":"case xhosa","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/yiddish","title":"case yiddish","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/yoruba","title":"case yoruba","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/zhuang","title":"case zhuang","type":"case"},{"path":"\/documentation\/openaiclient\/iso6391\/zulu","title":"case zulu","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/iso6391\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/iso6391\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/iso6391\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/iso6391\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/iso6391\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/iso6391\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/iso6391","title":"ISO6391","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/==(_:_:)","title":"static func == (Level, Level) -> Bool","type":"op"},{"path":"\/documentation\/openaiclient\/level\/_(_:_:)-xmg","title":"static func < (Level, Level) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/openaiclient\/level\/error","title":"case error","type":"case"},{"path":"\/documentation\/openaiclient\/level\/info","title":"case info","type":"case"},{"path":"\/documentation\/openaiclient\/level\/none","title":"case none","type":"case"},{"path":"\/documentation\/openaiclient\/level\/trace","title":"case trace","type":"case"},{"path":"\/documentation\/openaiclient\/level\/warn","title":"case warn","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/'...(_:)-9ozr5","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/openaiclient\/level\/'...(_:)-gnk4","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/openaiclient\/level\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/openaiclient\/level\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/openaiclient\/level\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/openaiclient\/level\/_(_:_:)-8z1a","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/openaiclient\/level\/_=(_:_:)-87hj3","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/openaiclient\/level\/_=(_:_:)-8b5kr","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/level\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/level\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/level\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/level\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/level","title":"Level","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/readystate\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/openaiclient\/readystate\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/openaiclient\/readystate\/open","title":"case open","type":"case"},{"path":"\/documentation\/openaiclient\/readystate\/raw","title":"case raw","type":"case"},{"path":"\/documentation\/openaiclient\/readystate\/shutdown","title":"case shutdown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/readystate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/readystate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/readystate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/readystate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/readystate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/readystate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/readystate","title":"ReadyState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/json","title":"case json","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/srt","title":"case srt","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/text","title":"case text","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/verbosejson","title":"case verboseJSON","type":"case"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/vtt","title":"case vtt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/transcriptionformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/transcriptionformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/transcriptionformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/transcriptionformat","title":"TranscriptionFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationsformat\/b64_json","title":"case b64_json","type":"case"},{"path":"\/documentation\/openaiclient\/variationsformat\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationsformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationsformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/variationsformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationsformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationsformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/variationsformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/variationsformat","title":"VariationsFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationssize\/size1024x1024","title":"case size1024x1024","type":"case"},{"path":"\/documentation\/openaiclient\/variationssize\/size256x256","title":"case size256x256","type":"case"},{"path":"\/documentation\/openaiclient\/variationssize\/size512x512","title":"case size512x512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationssize\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationssize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openaiclient\/variationssize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationssize\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openaiclient\/variationssize\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openaiclient\/variationssize\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openaiclient\/variationssize","title":"VariationsSize","type":"enum"}],"path":"\/documentation\/openaiclient","title":"OpenAIClient","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}